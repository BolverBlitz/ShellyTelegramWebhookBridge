name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows]
        arch: [386, amd64, arm64]
        include:
          - os: linux
            ext: ""
          - os: windows
            ext: ".exe"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install dependencies
        run: go mod tidy

      - name: Build for ${{ matrix.os }} ${{ matrix.arch }}
        run: |
          if [[ "${{ matrix.os }}" == "linux" ]]; then
            sudo apt-get install -y musl-tools
            CC=musl-gcc CGO_ENABLED=1 GOOS=linux GOARCH=${{ matrix.arch }} go build -ldflags "-linkmode external -extldflags -static" -o bin/telegram-api-${{ matrix.os }}-${{ matrix.arch }}
          else
            GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o bin/telegram-api-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: telegram-api-${{ matrix.os }}-${{ matrix.arch }}
          path: bin/telegram-api-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          body: "Automated release of the latest build."
          draft: false
          prerelease: false
          files: bin/**/*

